#!/usr/bin/python


name=['ryan', 'sim','aryan']
age=['35','24']



name1=[]
together=name+age

print (together,len(together))

name_3_times=name * 3

print (name_3_times,len(name_3_times))

name1.append('SeemaAryan')
name1=name1+name
name2=[]
name2.extend(name1)

print ("original list is", name)
print ("new name1 list after append is", name1)
print ("new name2 list after extend is", name2)

print (" output of name1[:] is ", name1[:])
print ("new name1 list after append is", name1)

print ("output of name1[0:-1] is", name1[0:-1])
print ("new name1 list after append is", name1)

name[0:1]=['grandcanyon', 'supercharger'] # THIS WILL REPLACE THE ELEMENT FROM 0 TO 1ST INDEX

print ("new name list after adding new elements is", name)

print ("new name list before sorting is \n " ,name)
name.sort() # SORTING WONT WORK IF LIST IS HAVING UPPER AND LOWER CHAR MIXED
print ("new name list after sorting is \n " ,name)

name3=name.pop(1) # PASS THE INDEX NO WHICH NEEDS TO BE POPPED OUT.THE OLD LIST WILL CHANGE

print("AFTER POP new popped out list is name3 and old list is name", name3,name)
# CHECK FOR del and remove functions in list

### FOR LIST WITH INTEGER ELEMENTS

# nums = [3, 41, 12, 9, 74, 15]
# print len(nums)
#6
# print max(nums)
#74
# print min(nums)
#3
# print sum(nums)
#154
# print sum(nums)/len(nums)
#25


# Split. Used on strings to make it a list. SPLIT DOESNT WORK IN CASE OF LIST.

str="aryan sim SeemaAryan"

l=str.split()

print ("THE LIST AND ITS LENGTH AFTER SPLITTING THE STRING IS", l, len(l))

# Join.. Used on list to make it a string.

delimiter=' '
str=delimiter.join(l) # REMEMBER THE SYNTAX. ITS NOT SAME AS SPLIT.

print (" STRING AND ITS LENGTH AFTER THE JOIN IS", str, len(str))

#### append and + in list

t1=['1','2','3','4']

t2=t1.append('10') # t1 will be changed here but t2 remains blank

print (' T1 AND T2 after the append operation are', t1 , t2)


t2= t1 + [11,12]

print (' T1 AND T2 after the + operation are', t1 , t2)

######### extending a list. Same as append but here you can append a list to the end rather than one element in the list.

a=['1','2','3','4']
b=['10','11','12']

a.extend(b)

print ('OUTPUT AFTER PERFORMING EXTEND ON THE LIST', a)

#### Inserting an item in a give postion in a  list.

print ('before insert the list b is', b)
print ('before insert the list a is', a)

b.insert(1,a)

print ('OUTPUT AFTER THE INSERT', b)


##### BELOW CODE IS COMMENTED USING A WHILE LOOP. IT SHOWS DIFFERENT LIST USAGES 
a='FALSE'
while  a!='FALSE':
        a = [66.25, 333, 333, 1, 1234.5]
        print(a.count(333), a.count(66.25), a.count('x'))
        #2 1 0
        a.insert(2, -1)
        a.append(333)
        a
        #[66.25, 333, -1, 333, 1, 1234.5, 333]
        a.index(333)
        #1
        a.remove(333)
        a
        #[66.25, -1, 333, 1, 1234.5, 333]
        a.reverse()
        a
        #[333, 1234.5, 1, 333, -1, 66.25]
        a.sort()
        a
        #[-1, 1, 66.25, 333, 333, 1234.5]
        a.pop()
        #1234.5
        a
        #[-1, 1, 66.25, 333, 333]


# TO REMOVE DUPLICATE ELEMENTS FROM THE LIST


x = [11, 11, 2, 2, 2, 2, 2, 3, 3]
y=set(x)
print y
set([11, 2, 3])

print sorted(set(x))
[2,3,11]
